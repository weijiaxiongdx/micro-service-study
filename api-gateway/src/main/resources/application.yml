server:
  port: 8110

spring:
  application:
    name: api-gateway #服务名称

  profiles:
    active: '@profileActive@'

  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848 #nacos服务地址，将网关注册到nacos
    gateway:
      discovery:
        locator:
          enabled: true #让gateway从nacos中获取信息
      routes:
        - id: order_route #当前路由唯一标识，唯一，默认UUID
          #uri: http://localhost:9110 #请求最终要被转发的地址，转发到订单服务
          uri: lb://order-service #集成nacos后，使用负载均衡转发到对应的服务，order-service为服务名称
          order: 1 #路径的优先级，数字越小优先级越高
          predicates: #转发请求要满足的条件(只要有一个断言不满足就不能转发)
            - Path=/order-serv/** #内置断言Path，当请求满足Path指定的规则时，此路由才会被转发
            - Before=2030-03-10T00:00:00.000+08:00 #内置断言Before，当请求时间在2030-03-10之前，此路由才会被转发，测试通过
            - Method=GET #内置断言Method，当请求方式为get时，此路由才会被转发
          filters: #过滤器，在请求转发过程中，可以对请求作一些修改
            - StripPrefix=1 #在请求转发之前去掉一层路径，本来转发完整路径为http://localhost:9110/order-serv/order/detail?orderId=308，但必须要去掉order-serv这一层才能访问到订单服务
            - SetStatus=250 #该内置局部过滤器是更改响应的状态码
            - Log=true,false #自定义的局部过滤器，控制日志是否开启

        - id: auth_route # 新增授权中心路由
          uri: lb://auth-service #集成nacos后，使用负载均衡转发到对应的服务，auth-service为服务名称
          order: 0 #路径的优先级，数字越小优先级越高
          predicates: #转发请求要满足的条件
            - Path=/login-serv/** #内置断言Path，当请求满足Path指定的规则时，此路由才会被转发
          filters: #过滤器，在请求转发过程中，可以对请求作一些修改
            - StripPrefix=1

  zipkin:
    base-url: http://127.0.0.1:9411/ #指定Zipkin服务端地址
    discoveryClientEnable: false #让nacos把base-url当成一个url，不要当成服务名
  sleuth:
    sampler:
      probability: 1.0 #采样百分比，向Zipkin服务端推送数据需要发送请求，有性能损耗，此处可按实际情况配置百分比，1.0表示百分百
